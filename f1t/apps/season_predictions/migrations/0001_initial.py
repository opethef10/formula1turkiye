# Generated by Django 5.1.6 on 2025-02-23 12:48

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("fantasy", "0086_championship_pole_point"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Prediction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "championship",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fantasy.championship",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveIntegerField(verbose_name="Sıralama")),
                ("text", models.TextField(verbose_name="Soru Metni")),
                (
                    "help_text",
                    models.TextField(blank=True, verbose_name="Yardım Metni"),
                ),
                (
                    "question_type",
                    models.CharField(
                        choices=[
                            ("integer", "Sayısal Değer"),
                            ("multiple_choice", "Çoklu Seçim"),
                            ("single_choice", "Tek Seçim (Radio Button)"),
                            ("text", "Metin"),
                            ("driver_multiselect", "Pilot Çoklu Seçim"),
                            ("driver_singleselect", "Tek Pilot Seçimi (Radio Button)"),
                            ("race_singleselect", "Yarış Seçimi (Radio Button)"),
                            ("race_select", "Yarış Seçimi (Checkbox)"),
                            (
                                "constructor_singleselect",
                                "Tek Takım Seçimi (Radio Button)",
                            ),
                            ("constructor_multiselect", "Takım Çoklu Seçim (Checkbox)"),
                            ("boolean", "Evet/Hayır"),
                            ("driver_matrix", "Pilot Sıralama Matrisi"),
                        ],
                        default="text",
                        max_length=32,
                        verbose_name="Soru Tipi",
                    ),
                ),
                (
                    "positions",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Number of positions in the ranking matrix (only for driver matrix questions)",
                        null=True,
                        verbose_name="Matrix Positions",
                    ),
                ),
                (
                    "choices",
                    models.TextField(
                        blank=True,
                        help_text="Virgülle ayrılmış seçenekler (sadece çoklu seçimler için)",
                        verbose_name="Seçenekler",
                    ),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Aktif")),
                (
                    "validation_min",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Minimum Değer",
                    ),
                ),
                (
                    "validation_max",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(1000)],
                        verbose_name="Maksimum Değer",
                    ),
                ),
                (
                    "championship",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fantasy.championship",
                    ),
                ),
            ],
            options={
                "verbose_name": "Soru",
                "verbose_name_plural": "Sorular",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.JSONField()),
                (
                    "prediction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="answers",
                        to="season_predictions.prediction",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="season_predictions.question",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="prediction",
            constraint=models.UniqueConstraint(
                fields=("user", "championship"), name="unique_user_championship"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="answer",
            unique_together={("prediction", "question")},
        ),
    ]
